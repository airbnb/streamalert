{
  "unit_test_simple_log": {
    "parser": "json",
    "schema": {
      "unit_key_01": "integer",
      "unit_key_02": "string"
    }
  },
  "test_log_type_json": {
    "parser": "json",
    "schema": {
      "key1": [],
      "key2": "string",
      "key3": "integer",
      "key9": "boolean",
      "key10": {},
      "key11": "float"
    },
    "configuration": {
      "optional_top_level_keys": [
        "key9",
        "key10",
        "key11"
      ]
    }
  },
  "test_log_type_json_2": {
    "parser": "json",
    "schema": {
      "key4": "boolean",
      "key5": "float",
      "key6": "integer",
      "key7": "boolean"
    }
  },
  "test_log_type_json_nested": {
    "parser": "json",
    "schema": {
      "date": "string",
      "unixtime": "integer",
      "host": "string",
      "data": {}
    }
  },
  "test_log_type_json_nested_osquery": {
    "parser": "json",
    "schema": {
      "action": "string",
      "calendarTime": "string",
      "columns": {},
      "decorations": {
        "role": "string",
        "env": "string",
        "cluster": "string",
        "number": "integer"
      },
      "hostIdentifier": "string",
      "log_type": "string",
      "name": "string",
      "unixTime": "integer"
    },
    "configuration": {
      "optional_top_level_keys": [
        "log_type"
      ]
    }
  },
  "test_log_type_json_nested_with_data": {
    "parser": "json",
    "schema": {
      "date": "string",
      "unixtime": "integer",
      "host": "string",
      "application": "string",
      "environment": "string",
      "data": {
        "category": "string",
        "type": "integer",
        "source": "string"
      }
    }
  },
  "test_log_type_kv_auditd": {
    "parser": "kv",
    "schema": {
      "type": "string",
      "msg": "string",
      "arch": "string",
      "syscall": "string",
      "success": "string",
      "exit": "string",
      "a0": "string",
      "a1": "string",
      "a2": "string",
      "a3": "string",
      "items": "string",
      "ppid": "integer",
      "pid": "integer",
      "auid": "integer",
      "uid": "integer",
      "gid": "integer",
      "euid": "integer",
      "suid": "integer",
      "fsuid": "integer",
      "egid": "integer",
      "sgid": "integer",
      "fsgid": "integer",
      "tty": "string",
      "ses": "string",
      "comm": "string",
      "exe": "string",
      "subj": "string",
      "key": "string",
      "type_2": "string",
      "msg_2": "string",
      "cwd": "string",
      "type_3": "string",
      "msg_3": "string",
      "item": "string",
      "name": "string",
      "inode": "string",
      "dev": "string",
      "mode": "integer",
      "ouid": "integer",
      "ogid": "integer",
      "rdev": "string",
      "obj": "string"
    },
    "configuration": {
      "delimiter": " ",
      "separator": "="
    }
  },
  "test_log_type_csv": {
    "parser": "csv",
    "schema": {
      "date": "string",
      "time": "integer",
      "host": "string",
      "message": "string"
    },
    "configuration": {
      "log_patterns": {
        "message": [
          "*keyword1*"
        ]
      }
    }
  },
  "test_log_type_csv_nested": {
    "parser": "csv",
    "schema": {
      "date": "string",
      "time": "integer",
      "host": "string",
      "env": "string",
      "message": {
        "application": "string",
        "role": "string",
        "cluster_host": "integer",
        "cluster_size": "integer",
        "result": "string"
      }
    },
    "configuration": {
      "log_patterns": {
        "env": [
          "Corp"
        ],
        "host": [
          "host*.prod.test"
        ],
        "message": {
          "role": [
            "*-server*"
          ]
        }
      }
    }
  },
  "test_log_type_syslog": {
    "parser": "syslog",
    "schema": {
      "timestamp": "string",
      "host": "string",
      "application": "string",
      "message": "string"
    }
  },
  "test_inspec": {
    "schema": {
      "title": "string",
      "desc": "string",
      "impact": "string",
      "refs": "string",
      "tags": "string",
      "code": "string",
      "id": "string",
      "source_location": "string",
      "results": "string"
    },
    "parser": "json",
    "configuration": {
      "json_path": "$.profiles[*].controls[*]"
    }
  },
  "test_cloudtrail": {
    "parser": "json",
    "schema": {
      "eventVersion": "string",
      "eventID": "string",
      "eventTime": "string",
      "requestParameters": {},
      "eventType": "string",
      "responseElements": "string",
      "awsRegion": "string",
      "eventName": "string",
      "userIdentity": {},
      "eventSource": "string",
      "requestID": "string",
      "userAgent": "string",
      "sourceIPAddress": "string",
      "recipientAccountId": "string"
    },
    "configuration": {
      "json_path": "Records[*]"
    }
  },
  "test_cloudwatch": {
    "schema": {
      "protocol": "integer",
      "source": "ipaddress",
      "destination": "ipaddress",
      "srcport": "integer",
      "destport": "integer",
      "action": "string",
      "packets": "integer",
      "bytes": "integer",
      "windowstart": "integer",
      "windowend": "integer",
      "version": "integer",
      "eni": "string",
      "account": "integer",
      "flowlogstatus": "string"
    },
    "parser": "json",
    "configuration": {
      "json_path": "logEvents[*].extractedFields",
      "envelope_keys": {
        "logGroup": "string",
        "logStream": "string",
        "owner": "integer"
      }
    }
  },
  "test_multiple_schemas:01": {
    "schema": {
      "name": "string",
      "identifier": "string",
      "time": "string",
      "type": "string",
      "message": "string"
    },
    "parser": "json",
    "configuration": {
      "log_patterns": {
        "type": [
          "*file_added_event*"
        ]
      }
    }
  },
  "test_multiple_schemas:02": {
    "schema": {
      "name": "string",
      "identifier": "string",
      "time": "string",
      "type": "string",
      "message": "string"
    },
    "parser": "json",
    "configuration": {
      "log_patterns": {
        "type": [
          "*file_removed_event*"
        ]
      }
    }
  },
  "cloudwatch:test_match_types": {
    "schema": {
      "account": "integer",
      "region": "string",
      "detail": {},
      "source": "string"
    },
    "parser": "json"
  },
  "cloudwatch:test_match_types_2": {
    "schema": {
      "account": "integer",
      "region": "string",
      "detail": {},
      "source": "string",
      "description": {},
      "resources": []
    },
    "parser": "json"
  },
  "json:embedded": {
    "schema": {
      "nested_key_01": "string",
      "nested_key_02": "string"
    },
    "parser": "json",
    "configuration": {
      "embedded_json": true,
      "envelope_keys": {
        "env_key_01": "string",
        "env_key_02": "string"
      },
      "json_path": "test_list[*].message"
    }
  },
  "json:regex_key_with_envelope": {
    "schema": {
      "nested_key_1": "string",
      "nested_key_2": "string",
      "nested_key_3": "string"
    },
    "parser": "json",
    "configuration": {
      "envelope_keys": {
        "time": "string",
        "date": "string",
        "host": "string"
      },
      "optional_envelope_keys": [
        "host"
      ],
      "json_regex_key": "message"
    }
  },
  "json:regex_key": {
    "schema": {
      "nested_key_1": "string",
      "nested_key_2": "string",
      "nested_key_3": "string"
    },
    "parser": "json",
    "configuration": {
      "json_regex_key": "message"
    }
  },
  "test_log_threat_intel_custom": {
    "schema": {
      "Field1": {},
      "Field2": {},
      "Field3": {},
      "Field4": {}
    },
    "parser": "json"
  },
  "test:log.name.with.dots": {
    "schema": {
      "Field1": {},
      "Field2": {},
      "Field3": {},
      "Field4": {}
    },
    "parser": "json"
  }
}